{"version":3,"sources":["components/Form.jsx","components/Info.jsx","components/Result.jsx","components/App.js","serviceWorker.js","index.js"],"names":["Form","props","react_default","a","createElement","className","onSubmit","submit","type","value","onChange","change","placeholder","Info","concat","icon","text","Result","_props$weather","weather","date","city","sunrise","sunset","temp","pressure","wind","err","minTemp","maxTemp","description","country","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","toUpperCase","Math","round","src_components_Info","keyToAPI","App","state","weatherIcon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","handelInputChange","e","_this","setState","target","handelButtonSubmit","preventDefault","API","fetch","then","response","ok","Error","json","data","time","toLocaleString","sys","main","temp_min","temp_max","speed","get_WeatherIcon","id","catch","console","log","prevState","icons","rangeId","this","src_components_Form","src_components_Result","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e91874d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Form.css'\r\n\r\nconst Form = props => {\r\n  return (\r\n    <form className='form' onSubmit={props.submit}>\r\n      <input\r\n      className='form__input'\r\n        type=\"text\"\r\n        value={props.value}\r\n        onChange={props.change}\r\n        placeholder=\"Enter city\"\r\n      />\r\n      <button className='form__btn'>Search city</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport './Info.css'\r\nconst Info = props => {\r\n  return (\r\n    <div className=\"info\">\r\n      <i className={` info__icon wi ${props.icon}`}></i>\r\n      <span className='info__text'>{props.text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\nimport Info from \"./Info\";\r\nimport \"./Result.css\";\r\n\r\nconst Result = props => {\r\n  const {\r\n    date,\r\n    city,\r\n    sunrise,\r\n    sunset,\r\n    temp,\r\n    pressure,\r\n    wind,\r\n    err,\r\n    minTemp,\r\n    maxTemp,\r\n    description,\r\n    icon,\r\n    country\r\n  } = props.weather;\r\n  let content = null;\r\n  if (!err && city) {\r\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n    content = (\r\n      <div className=\"result\">\r\n        <h1>\r\n          {city.toUpperCase()}, {country}\r\n        </h1>\r\n        <i className={`result__main-icon wi ${icon}`}></i>\r\n        <p className=\"result__main-temp\">{Math.round(temp)}&#176;C</p>\r\n        <span className=\"result__min-temp\">{Math.round(minTemp)}&#176;C</span>\r\n        <span className=\"result__max-temp\">{Math.round(maxTemp)}&#176;C</span>\r\n        <p className='result__description'>{description}</p>\r\n        <details >\r\n          <summary className='result__btn'>More info</summary>\r\n          <Info icon={\"wi-time-3\"} text={date}></Info>\r\n          <Info icon={\"wi-barometer\"} text={`${pressure}  hpa`}></Info>\r\n          <Info icon={\"wi-windy\"} text={`${wind} m/s`}></Info>\r\n          <Info icon={\"wi-sunrise\"} text={sunriseTime}></Info>\r\n          <Info icon={\"wi-sunset\"} text={sunsetTime}></Info>\r\n        </details>\r\n      </div>\r\n    );\r\n  }\r\n  return <div className=\"result\">{err ? `Not Found ${city}` : content}</div>;\r\n};\r\n\r\nexport default Result;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport \"weather-icons/css/weather-icons.css\";\r\nimport Form from \"./Form\";\r\nimport Result from './Result'\r\n\r\nconst keyToAPI = \"a67178c4d192b130e85780b3051d411d\";\r\nclass App extends Component {\r\n  state = {\r\n    value: \"\",\r\n    date: \"\",\r\n    city: \"\",\r\n    sunrise: \"\",\r\n    sunset: \"\",\r\n    temp: \"\",\r\n    minTemp: \"\",\r\n    maxTemp: \"\",\r\n    pressure: \"\",\r\n    wind: \"\",\r\n    description: \"\",\r\n    icon: \"\",\r\n    country: \"\",\r\n    err: false\r\n  };\r\n  weatherIcon = {\r\n    Thunderstorm: \"wi-thunderstorm\",\r\n    Drizzle: \"wi-sleet\",\r\n    Rain: \"wi-storm-showers\",\r\n    Snow: \"wi-snow\",\r\n    Atmosphere: \"wi-fog\",\r\n    Clear: \"wi-day-sunny\",\r\n    Clouds: \"wi-day-fog\"\r\n  };\r\n  get_WeatherIcon(icons, rangeId) {\r\n    switch (true) {\r\n      case rangeId >= 200 && rangeId < 232:\r\n        this.setState({ icon: icons.Thunderstorm });\r\n        break;\r\n      case rangeId >= 300 && rangeId <= 321:\r\n        this.setState({ icon: icons.Drizzle });\r\n        break;\r\n      case rangeId >= 500 && rangeId <= 521:\r\n        this.setState({ icon: icons.Rain });\r\n        break;\r\n      case rangeId >= 600 && rangeId <= 622:\r\n        this.setState({ icon: icons.Snow });\r\n        break;\r\n      case rangeId >= 701 && rangeId <= 781:\r\n        this.setState({ icon: icons.Atmosphere });\r\n        break;\r\n      case rangeId === 800:\r\n        this.setState({ icon: icons.Clear });\r\n        break;\r\n      case rangeId >= 801 && rangeId <= 804:\r\n        this.setState({ icon: icons.Clouds });\r\n        break;\r\n      default:\r\n        this.setState({ icon: icons.Clouds });\r\n    }\r\n  }\r\n  handelInputChange = e => {\r\n    this.setState({\r\n      value: e.target.value\r\n    });\r\n  };\r\n  handelButtonSubmit = e => {\r\n    e.preventDefault();\r\n    const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=${keyToAPI}&units=metric`;\r\n\r\n    fetch(API)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(\"Nie udało się\");\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const time = new Date().toLocaleString();\r\n        this.setState(state => ({\r\n          err: false,\r\n          date: time,\r\n          country: data.sys.country,\r\n          sunrise: data.sys.sunrise,\r\n          sunset: data.sys.sunset,\r\n          temp: data.main.temp,\r\n          minTemp: data.main.temp_min,\r\n          maxTemp: data.main.temp_max,\r\n          pressure: data.main.pressure,\r\n          wind: data.wind.speed,\r\n          city: state.value,\r\n          description: data.weather[0].description\r\n        }));\r\n        this.get_WeatherIcon(this.weatherIcon, data.weather[0].id);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState(prevState => ({\r\n          err: true,\r\n          city: prevState.value\r\n        }));\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Form\r\n          value={this.state.value}\r\n          change={this.handelInputChange}\r\n          submit={this.handelButtonSubmit}\r\n        ></Form>\r\n        <Result weather={this.state}></Result>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}